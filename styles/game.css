#game
{
	touch-action: none; /* Without it, touch dragging would be reset after a few moments by browser */
	fill: white;
	font-family: sans-serif;
	font-size: 100%;
}

#tiles
{
	overflow: visible;
}

.gameStateDefault
{
	cursor: default;
}

.gameStateMove
{
	cursor: move;
}

.tile, .tileHidden
{
	overflow: visible;
}

.tileHidden
{
	display: none;
}

#tileArea
{
	fill: rgba(0, 255, 0, 0);
	stroke: none;
}

.tileStateEditable
{
	cursor: grab;
}

.tileStateEditing
{
	cursor: grabbing;
}

.tileStateConfirmed
{
	cursor: not-allowed;
}

#tilePicture
{
	pointer-events: none;
	/* filter: drop-shadow(0 0 20px white); */
}

#tileNumber
{
	fill: red;
	font-weight: 800;
	font-size: 80px;
	stroke: white;
    stroke-width: 2px;
	pointer-events: none;
	display: none;
}

#intro
{
	font-family: "Roboto Slab", sans-serif;
	font-size: 18px;
	filter: drop-shadow(0 0 20px rgb(108, 66, 131));
}

#outro
{
	font-family: "Roboto Slab", sans-serif;
	font-size: 250px;
	filter: drop-shadow(0 0 20px rgb(108, 66, 131));
	opacity: 0;
}

.textTutorial
{
	font-family: "Roboto Slab", sans-serif;
	font-size: 18px;
	font-style: italic;
}

#note
{
	overflow: visible;
	pointer-events: none;
}

#note rect, #note polygon
{
	fill: black;
}

#note text
{
	font-family: "Caveat", serif;
	font-size: 32px;
	fill: white;
}

.animateTileConfirmed
{
	animation-name: animateTileConfirm;
	/* animation-delay: 0.07s; */
	animation-duration: 0.5s;
	animation-iteration-count: 1;
	animation-timing-function: ease;
	animation-fill-mode: forwards;
}
@keyframes animateTileConfirm {
	0% {
		animation-timing-function: ease-in;
		opacity: 1;
		transform: translate(-128px, calc(-24px - 128px));
	}

	24% {
		opacity: 1;
	}

	40% {
		animation-timing-function: ease-in;
		transform: translate(-128px, calc(-16px - 128px));
	}

	65% {
		animation-timing-function: ease-in;
		transform: translate(-128px, calc(-8px - 128px));
	}

	82% {
		animation-timing-function: ease-in;
		transform: translate(-128px, calc(-4px - 128px));
	}

	93% {
		animation-timing-function: ease-in;
		transform: translate(-128px, calc(-2px - 128px));
	}

	25%,
	55%,
	75%,
	87% {
		animation-timing-function: ease-out;
		transform: translate(-128px, calc(0px - 128px));
	}

	100% {
		animation-timing-function: ease-out;
		opacity: 1;
		transform: translate(-128px, calc(0px - 128px));
	}
}

.animateFadeIn
{
	animation-name: animateFadeIn;
	animation-delay: 1.5s; 
	animation-duration: 1s;
	animation-iteration-count: 1;
	animation-timing-function: ease;
	animation-fill-mode: forwards;
}
.animateFadeOut
{
	animation-name: animateFadeIn;
	animation-duration: 0.2s;
	animation-iteration-count: 1;
	animation-timing-function: ease;
	animation-fill-mode: forwards;
	animation-direction: reverse;
}
@keyframes animateFadeIn {
    0% {
        fill-opacity: 0;
    }
	
    100% {
        fill-opacity: 1;
    }
}

.animateHeartIn
{
	animation-name: animateHeart, animateHeartBeat;
	animation-delay: 4s, 4.5s; 
	animation-duration: 0.5s, 1s;
	animation-iteration-count: 1, infinite;
	animation-timing-function: ease, ease;
	animation-fill-mode: forwards, none;
}
.animateHeartOut
{
	animation-name: animateHeart;
	animation-delay: 0;
	animation-duration: 1s;
	animation-iteration-count: 1;
	animation-direction: reverse;
	animation-fill-mode: none;
}
@keyframes animateHeart {
    0% {
		filter: invert(0) sepia(0) saturate(1) hue-rotate(0);
    }

    50% {
		filter: invert(0.5) sepia(1) saturate(1) hue-rotate(-20deg);
    }
	
    100% {
		filter: invert(0.5) sepia(1) saturate(50) hue-rotate(-20deg) drop-shadow(0 0 40px rgba(255, 0, 0, 0.5));
    }
}

@keyframes animateHeartBeat {
    0%, 30%, 60%, 100% {
		transform: scale(1);
    }
	
    15%, 45% {
		transform: scale(1.01);
    }
}

.animateOutroIn
{
	animation-name: animateOutro;
	animation-delay: 4.5s; 
	animation-duration: 1.5s;
	animation-iteration-count: 1;
	animation-timing-function: ease;
	animation-fill-mode: forwards;
}
.animateOutroOut
{
	animation-name: animateOutro;
	animation-duration: 0.2s;
	animation-iteration-count: 1;
	animation-timing-function: ease;
	animation-fill-mode: forwards;
	animation-direction: reverse;
}
@keyframes animateOutro {
    0% {
        opacity: 0;
    }
	
    100% {
        opacity: 1;
    }
}

.animateTutorialView
{
	animation-name: animateTutorialView;
	animation-duration: 1s;
	animation-iteration-count: infinite;
	animation-timing-function: ease;
	animation-direction: alternate;
}
@keyframes animateTutorialView {
    0% {
        transform: translate(0, 0);
    }
	
    100% {
        transform: translate(0, 30px);
    }
}

.animateTutorialTarget
{
	fill: rgb(207, 119, 255);
	stroke: rgb(207, 119, 255);
	stroke-width: 0.04;

	animation-name: animateTutorialTarget;
	animation-duration: 1.5s;
	animation-iteration-count: infinite;
	animation-timing-function: ease-out;
}
@keyframes animateTutorialTarget {
    0% {
        transform: scale(1);
		fill-opacity: 0.2;
		stroke-opacity: 1;
    }
	
    100% {
        transform: scale(1.2);
		fill-opacity: 0;
		stroke-opacity: 0;
    }
}